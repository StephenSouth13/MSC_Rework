"use client";

import { motion } from "framer-motion";
import {
  Target,
  Users,
  Award,
  TrendingUp,
  Heart,
  Star,
  Zap,
  Shield,
  Globe,
  CheckCircle,
  ArrowRight,
  BookOpen,
  Lightbulb,
  Rocket,
} from "lucide-react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/Card";
import { Button } from "@/components/ui/Button";

export default function AboutPage() {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        duration: 0.6,
        staggerChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 30 },
    visible: {
      opacity: 1,
      y: 0,
      transition: { duration: 0.6 },
    },
  };

  const stats = [
    {
      icon: <Users className="w-8 h-8" />,
      number: "500+",
      label: "HÔøΩÔøΩc vi√™n ƒë√£ ƒë√†o t·∫°o",
      color: "from-blue-500 to-cyan-500",
    },
    {
      icon: <Award className="w-8 h-8" />,
      number: "15+",
      label: "D·ª± √°n th√†nh c√¥ng",
      color: "from-purple-500 to-pink-500",
    },
    {
      icon: <Star className="w-8 h-8" />,
      number: "98%",
      label: "T·ª∑ l·ªá h√†i l√≤ng",
      color: "from-yellow-500 to-orange-500",
    },
    {
      icon: <TrendingUp className="w-8 h-8" />,
      number: "5+",
      label: "NƒÉm kinh nghi·ªám",
      color: "from-green-500 to-emerald-500",
    },
  ];

  const values = [
    {
      icon: <Target className="w-12 h-12" />,
      title: "S·ª© m·ªánh",
      description:
        "ƒê√†o t·∫°o v√† ph√°t tri·ªÉn nh√¢n l·ª±c ch·∫•t l∆∞·ª£ng cao th√¥ng qua ph∆∞∆°ng ph√°p Mentoring k·∫øt h·ª£p Coaching, gi√∫p c√°c c√° nh√¢n v√† t·ªï ch·ª©c ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u b·ªÅn v·ªØng.",
      color: "from-blue-500 to-cyan-500",
    },
    {
      icon: <Eye className="w-12 h-12" />,
      title: "T·∫ßm nh√¨n",
      description:
        "Tr·ªü th√†nh trung t√¢m ƒë√†o t·∫°o Mentoring & Coaching h√†ng ƒë·∫ßu Vi·ªát Nam, g√≥p ph·∫ßn x√¢y d·ª±ng m·ªôt th·∫ø h·ªá l√£nh ƒë·∫°o t∆∞∆°ng lai c√≥ nƒÉng l·ª±c v√† t√¢m huy·∫øt.",
      color: "from-purple-500 to-pink-500",
    },
    {
      icon: <Heart className="w-12 h-12" />,
      title: "Gi√° tr·ªã c·ªët l√µi",
      description:
        "Ch·∫•t l∆∞·ª£ng - Cam k·∫øt - S√°ng t·∫°o - B·ªÅn v·ªØng. Ch√∫ng t√¥i ƒë·∫∑t ng∆∞·ªùi h·ªçc l√†m trung t√¢m v√† cam k·∫øt mang l·∫°i gi√° tr·ªã th·ª±c t·∫ø cho m·ªçi h·ªçc vi√™n.",
      color: "from-green-500 to-emerald-500",
    },
  ];

  const timeline = [
    {
      year: "2019",
      title: "Th√†nh l·∫≠p MSC",
      description:
        "Ra ƒë·ªùi v·ªõi t·∫ßm nh√¨n tr·ªü th√†nh trung t√¢m Mentoring & Coaching ƒë·∫ßu ti√™n t·∫°i Vi·ªát Nam",
    },
    {
      year: "2020",
      title: "Ph√°t tri·ªÉn ƒë·ªôi ng≈©",
      description:
        "X√¢y d·ª±ng ban gi·∫£ng hu·∫•n chuy√™n nghi·ªáp v·ªõi c√°c chuy√™n gia h√†ng ƒë·∫ßu",
    },
    {
      year: "2021",
      title: "M·ªü r·ªông ho·∫°t ƒë·ªông",
      description: "Tri·ªÉn khai c√°c d·ª± √°n ƒë√†o t·∫°o quy m√¥ l·ªõn cho doanh nghi·ªáp",
    },
    {
      year: "2022",
      title: "ƒê·∫°t c·ªôt m·ªëc quan tr·ªçng",
      description: "ƒê√†o t·∫°o th√†nh c√¥ng 300+ h·ªçc vi√™n v√† 10+ d·ª± √°n l·ªõn",
    },
    {
      year: "2023",
      title: "M·ªü r·ªông qu·ªëc t·∫ø",
      description:
        "K·∫øt n·ªëi v·ªõi c√°c t·ªï ch·ª©c gi√°o d·ª•c qu·ªëc t·∫ø, m·ªü r·ªông t·∫ßm ·∫£nh h∆∞·ªüng",
    },
    {
      year: "2024",
      title: "ƒê·ªïi m·ªõi c√¥ng ngh·ªá",
      description:
        "·ª®ng d·ª•ng c√¥ng ngh·ªá AI v√† digital transformation trong ƒë√†o t·∫°o",
    },
  ];

  const achievements = [
    "Trung t√¢m Mentoring & Coaching ƒë·∫ßu ti√™n t·∫°i Vi·ªát Nam",
    "ƒê√†o t·∫°o th√†nh c√¥ng 500+ h·ªçc vi√™n xu·∫•t s·∫Øc",
    "Tri·ªÉn khai 15+ d·ª± √°n th√†nh c√¥ng cho doanh nghi·ªáp",
    "ƒê·ªôi ng≈© gi·∫£ng vi√™n c√≥ tr√¨nh ƒë·ªô cao v√† kinh nghi·ªám th·ª±c ti·ªÖn",
    "Ph∆∞∆°ng ph√°p ƒë√†o t·∫°o ƒë·ªôc quy·ªÅn k·∫øt h·ª£p Mentoring & Coaching",
    "T·ª∑ l·ªá h·ªçc vi√™n c√≥ vi·ªác l√†m sau kh√≥a h·ªçc ƒë·∫°t 95%",
    "ƒê∆∞·ª£c tin t∆∞·ªüng b·ªüi nhi·ªÅu doanh nghi·ªáp l·ªõn",
    "G√≥p ph·∫ßn ph√°t tri·ªÉn ngu·ªìn nh√¢n l·ª±c ch·∫•t l∆∞·ª£ng cao cho x√£ h·ªôi",
  ];

  return (
    <div className="min-h-screen pt-16">
      {/* Hero Section */}
      <section className="relative py-20 overflow-hidden">
        <div className="container-responsive">
          <motion.div
            variants={containerVariants}
            initial="hidden"
            animate="visible"
            className="text-center max-w-4xl mx-auto"
          >
            <motion.div variants={itemVariants}>
              <span className="inline-block px-4 py-2 bg-blue-100 text-blue-700 rounded-full text-sm font-medium mb-6">
                üè¢ V·ªÅ ch√∫ng t√¥i
              </span>
              <h1 className="text-responsive-3xl font-bold text-gradient mb-6">
                MSC - Trung t√¢m Mentoring k·∫øt h·ª£p Coaching
              </h1>
              <p className="text-responsive-lg text-gray-600 mb-8 leading-relaxed">
                ƒê·∫ßu ti√™n t·∫°i Vi·ªát Nam, ch√∫ng t√¥i mang ƒë·∫øn ph∆∞∆°ng ph√°p ƒë√†o t·∫°o
                ƒë·ªôc ƒë√°o k·∫øt h·ª£p Mentoring v√† Coaching, gi√∫p h·ªçc vi√™n v√† d·ª± √°n
                ph√°t tri·ªÉn b·ªÅn v·ªØng.
              </p>
            </motion.div>
          </motion.div>
        </div>

        {/* Floating Elements */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <motion.div
            className="absolute top-1/4 left-10 w-20 h-20 bg-blue-200 rounded-full opacity-20"
            animate={{ y: [0, -20, 0], rotate: [0, 180, 360] }}
            transition={{ duration: 8, repeat: Infinity }}
          />
          <motion.div
            className="absolute top-1/3 right-20 w-16 h-16 bg-purple-200 rounded-full opacity-20"
            animate={{ y: [0, 20, 0], rotate: [360, 180, 0] }}
            transition={{ duration: 6, repeat: Infinity }}
          />
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-gradient-to-r from-blue-50 to-purple-50">
        <div className="container-responsive">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="grid grid-cols-2 lg:grid-cols-4 gap-8"
          >
            {stats.map((stat, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
                className="text-center"
              >
                <div
                  className={`w-16 h-16 mx-auto mb-4 rounded-2xl bg-gradient-to-r ${stat.color} flex items-center justify-center text-white shadow-lg`}
                >
                  {stat.icon}
                </div>
                <motion.h3
                  className="text-3xl font-bold text-gray-900 mb-2"
                  initial={{ scale: 0 }}
                  whileInView={{ scale: 1 }}
                  transition={{
                    duration: 0.8,
                    delay: index * 0.1 + 0.3,
                    type: "spring",
                    bounce: 0.5,
                  }}
                  viewport={{ once: true }}
                >
                  {stat.number}
                </motion.h3>
                <p className="text-gray-600 text-sm">{stat.label}</p>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>

      {/* Mission, Vision, Values */}
      <section className="py-20">
        <div className="container-responsive">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-responsive-2xl font-bold text-gradient mb-6">
              S·ª© m·ªánh - T·∫ßm nh√¨n - Gi√° tr·ªã
            </h2>
            <p className="text-responsive-base text-gray-600 max-w-3xl mx-auto">
              Nh·ªØng gi√° tr·ªã c·ªët l√µi ƒë·ªãnh h∆∞·ªõng m·ªçi ho·∫°t ƒë·ªông c·ªßa MSC
            </p>
          </motion.div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {values.map((value, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                viewport={{ once: true }}
              >
                <Card className="h-full text-center group" hover="lift">
                  <CardHeader>
                    <div
                      className={`w-20 h-20 mx-auto mb-4 rounded-3xl bg-gradient-to-r ${value.color} flex items-center justify-center text-white shadow-lg group-hover:scale-110 transition-transform duration-300`}
                    >
                      {value.icon}
                    </div>
                    <CardTitle className="text-xl">{value.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <CardDescription className="text-gray-600 leading-relaxed">
                      {value.description}
                    </CardDescription>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Timeline */}
      <section className="py-20 bg-gradient-to-r from-gray-50 to-blue-50">
        <div className="container-responsive">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-responsive-2xl font-bold text-gradient mb-6">
              H√†nh tr√¨nh ph√°t tri·ªÉn
            </h2>
            <p className="text-responsive-base text-gray-600 max-w-2xl mx-auto">
              T·ª´ nh·ªØng ng√†y ƒë·∫ßu th√†nh l·∫≠p ƒë·∫øn h√¥m nay, MSC kh√¥ng ng·ª´ng ph√°t
              tri·ªÉn v√† ƒë·ªïi m·ªõi
            </p>
          </motion.div>

          <div className="relative">
            {/* Timeline Line */}
            <div className="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-blue-500 to-purple-500 rounded-full hidden lg:block"></div>

            <div className="space-y-12 lg:space-y-16">
              {timeline.map((item, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, x: index % 2 === 0 ? -50 : 50 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className={`relative lg:flex lg:items-center ${
                    index % 2 === 0 ? "lg:flex-row-reverse" : ""
                  }`}
                >
                  {/* Timeline Dot */}
                  <div className="absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full border-4 border-white shadow-lg hidden lg:block z-10"></div>

                  {/* Content */}
                  <div
                    className={`lg:w-1/2 ${index % 2 === 0 ? "lg:pr-16" : "lg:pl-16"}`}
                  >
                    <Card className="group" hover="lift">
                      <CardHeader>
                        <div className="flex items-center gap-4 mb-2">
                          <span className="px-4 py-2 bg-gradient-to-r from-blue-500 to-purple-500 text-white rounded-full text-sm font-bold">
                            {item.year}
                          </span>
                        </div>
                        <CardTitle className="text-xl group-hover:text-blue-600 transition-colors">
                          {item.title}
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <CardDescription className="text-gray-600">
                          {item.description}
                        </CardDescription>
                      </CardContent>
                    </Card>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Achievements */}
      <section className="py-20">
        <div className="container-responsive">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-responsive-2xl font-bold text-gradient mb-6">
              Th√†nh t·ª±u n·ªïi b·∫≠t
            </h2>
            <p className="text-responsive-base text-gray-600 max-w-2xl mx-auto">
              Nh·ªØng c·ªôt m·ªëc quan tr·ªçng kh·∫≥ng ƒë·ªãnh v·ªã th·∫ø c·ªßa MSC trong lƒ©nh v·ª±c
              ƒë√†o t·∫°o
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            {achievements.map((achievement, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: index * 0.05 }}
                viewport={{ once: true }}
                className="flex items-start gap-3 p-4 rounded-lg hover:bg-blue-50 transition-colors group"
              >
                <CheckCircle className="w-6 h-6 text-green-500 flex-shrink-0 mt-1 group-hover:scale-110 transition-transform" />
                <p className="text-gray-700 leading-relaxed">{achievement}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-r from-blue-600 to-purple-600 text-white">
        <div className="container-responsive text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            <h2 className="text-responsive-2xl font-bold mb-6">
              C√πng MSC kh·ªüi ƒë·∫ßu h√†nh tr√¨nh ph√°t tri·ªÉn c·ªßa b·∫°n
            </h2>
            <p className="text-responsive-lg mb-8 opacity-90 max-w-2xl mx-auto">
              Tham gia c√°c kh√≥a ƒë√†o t·∫°o chuy√™n nghi·ªáp v√† tr·ªü th√†nh phi√™n b·∫£n t·ªët
              nh·∫•t c·ªßa ch√≠nh m√¨nh
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button
                variant="secondary"
                size="lg"
                className="bg-white text-blue-600 hover:bg-gray-100"
                rightIcon={<ArrowRight size={20} />}
              >
                Kh√°m ph√° kh√≥a h·ªçc
              </Button>
              <Button
                variant="outline"
                size="lg"
                className="border-white text-white hover:bg-white hover:text-blue-600"
                rightIcon={<BookOpen size={20} />}
              >
                T·∫£i brochure
              </Button>
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
}

// Eye icon component (since it's not in lucide-react by default)
const Eye = ({ className, ...props }: any) => (
  <svg
    className={className}
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24"
    {...props}
  >
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
    />
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={2}
      d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
    />
  </svg>
);
